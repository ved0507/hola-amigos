tomcat application server
apache tomcat is web server

what is Tomcat?
1. it is a application serverion
2. renders web pages that include java server pages




what do i have
16 tomcat servers with RHEL 6+ 
2 of the servers installed with machine learning models numpy pandas and regression MLP
integration of automation tool with tickiting plaform

NIA is built in MAVEN

================guru99==================
1. random numbers
	import random;	
	random.random();

2. lambda expression is anonymus expression

3. convert number to string
	str()
	
4. local variable - if var is assigned within the function then it is local
	global variable if variable used as reference in function 

5. mutable types - list sets dictionaries
	immutable types - strings tuples numbers

17 may 2019    -- 1 AM IST
scripting
1. rename a file	
	import os
	#os.rename(src,destination)
	os.rename("ved.txt","v.txt")
2.polymorphisam - abilty to take different form
	define method in child same name as in paraent class
    class Parent:
		def method1():
			pass
	class Child:
		def method2():
			pass
3. bubble sort
	def bubble(x):
		b=len(x)-1
		for i in range(b):
			for j in range(b-i):
				if x[j])>x[j+1]:
					x[y],x[y+1]=x[y+1],x[y]
		retrn x
		
	
4. Assert -sanity check that you can turn on or off when you are doe with your testing
   assertExpression[,Arguments]

		
	
5. exception

#===========Automation anywhere v11=============

Feasibility analysis

points to remember
1. Need to performing feasibility analysis before automation
2. 5 steps involved for feasibility analysis
3. fesibility matrix for identifying fesibility

feasibility steps
1. gathering information and resource - need SME
2. Examining process & noting down manual steps
3. understanding the logic - order of process
4. checking out hurdles that can prevent automation
5. verifying element that might require further testing

Feasibility matrix
fesibility index
score 	rate		remarks
0-14%	Low			Not Good
15-28%	Medium		Good with some complexity
29-35%	High		Good candidate

Complexity assessment
- determine complexity of automation
	- estimate effort
	- estimate effort for standardization
	

Informatino silos
data 					rate
1 database 				3
1 email inbox 			1
citrix/flash/activex	5
Non-dedicated email inbox	10

26/May

ROI analysis

1 .Perfromed to do cost benefir analysis
2. perfromed after knowing bussiness use case

points to remember
1. discuss need for performing ROI analysis
2. process of ROI analysis
3. ROI calculator

ROI estimation of expected profit

improved quality - total number of error in the automatino process

bussiness agility - soft savings

process improvement - regulatory compliance

training & services - cost of solution

Next===Automation design===



==================python 5 simple programms

#1
class Football:
	def __init__(self,name,league):
		self.name=name			
		self.league=league
	def club(self):
		if(self.league == "La Liga"):
			return "Spain"
		else:
			print(self.name +" Must be another country club")
			
club1=Football("Liverpool","Premier league")
#club1=Football("Real Madrid","La Liga")
v=club1.name

#2

def extendlist(val,list[]):
	list.append(val)
	return list
	
list1=extendlist(10)
print(list1)
		
#2.2
def extendlist(val,list=None):
	if list is None:
		list = []
	list.append(val)
	return list
	
list1=extendlist(10)
list2=extendlist(22,[])
list3=extendlist("a")
list4=extendlist("b")
print(list1)
print(list2)
print(list3)
print(list4)


#3 current directory

import os
print(os.path())

#4
tupleis immutable
list is mutable

#5	
a=10
b=4

print("equal" if a== b else " greater" if a>b else " lesser")




+==================AA-automation design=======

automation design
explain & describe the 10 steps of AA-automation

check eligibility
determine if it is feasibile
access time and effort neededfor automating 
calculate overall profit to be gained by its automation

automation design - every steps required for automation
ensure prerequisites

10 steps are
1. install software - install AA & provide necessary access
2. define start point - 	define inputs required for automation
3. define customer experiance - feedback,output modifications
4. hands on design - optical recorders
5. manage logs
6. determine monitoring plan
7. define modules - subtask modules,executables modules,template modules
8. utilizing modules
9.prepare workflow
10 prepare infra





==============JAVA hacker rank

1. java stdin stdout

import Java.util.*;

public class Animal(){
	public static void main(){
		Scanner scan=new Scanner(System.in);
		int a = scan.nextInt();
		System.out.println(a);
		}
}











if(n % 2 == 0 )
{
	if(n >= 2) && (n <=5)
	{
	System.out.println("Not weird");
	}
	elseif(n >= 6) && (n <=20){
	System.out.println("weird");}
	if((n > 20){
	System.out.println("weird");}
}
else{
	System.out.println("weird");
}







==01/06/2019============= JAVA day2 =======

1. 
class Test{
	protected x,y;
}	
	class Main{

	public static void main(String args[]){
		Test t new Test();
		System.out.println(t.x+ " " +t.y)
	
	}
}
Ans. java a protected member is accessable in all class of same pacakage
hence x,y=0,0

2. 
for(int i;1;i++) ----> ERROR
integer value cannot be puthere boolean is expected
hence correct value is:
for(int i;true;i++)

3. 
IN java we cannot call static method within a static method 
hence make fun() static then call the fun

class Main { 
    public static void main(String args[]) {    
        System.out.println(fun()); 
    }  
	//int fun() { 
	static int fun(){
	
        return 20; 
    }  
} 

4. In Java we cannot call static variable 
we can have static class member


5. Declaration & initilization
int variable2 //declaration

int variable =3 //assignment


6. oops concept
polymorphism
abstraction
classinheritance
encapsulation
object
	
6.1 polymorphism -  	
class GOGtest{
	
// Overloaded sum(). 
    // This sum takes two int parameters 
    public int sum(int x, int y) 
    { 
        return (x + y); 
    } 
  
    // Overloaded sum(). 
    // This sum takes three int parameters 
    public int sum(int x, int y, int z) 
    { 
        return (x + y + z); 
    } 
  
    // Overloaded sum(). 
    // This sum takes two double parameters 
    public double sum(double x, double y) 
    { 
        return (x + y); 
    } 
  
    // Driver code 
    public static void main(String args[]) 
    { 
        GOGtest s = new GOGtest(); 
        System.out.println(s.sum(10, 20)); 
        System.out.println(s.sum(10, 20, 30)); 
        System.out.println(s.sum(10.5, 20.5)); 
    } 
} 
polymorphism are of two types
Overloading 
overriding

6.2 inheritance
Allow to inherit(fields and methods) in the other class

	a. super class - 
	b. sub class 
	c. reusability

encapculation - data protector 
basically variable is hidden from other class
only the data can be seen from the members of the other class


Data abstraction
only the essential details are displayed to the user 

7 exception in java

8. interpreters are dependent platform

JVM is a Interpreter which is used to convert the byte code to corresponding machine 
code and JVM will help to convert the .class file into corresponding
machine language.

9 main method cannot be privte 

9.1
class ABCBank{
	int phone;
	double getPhone(){
		System.out.println("phone number received");
		return phone;
	}
}
ans. code will be compiled and generate ABCBank.class file

10 . compiler dont check whether the class contains the main method or not
it is the duty of JVM to check main method
ERROR : Run time exception

11 Main method should be public and static 

public static void main(String[] args){
}
Why JVm always searches the JVM



{hash set V hash map

hashing

static v final

constructor

parameterized constructor

runtime exception & eg.

explain the data

java app runtime - run with main program
public - access modifeier main function is accessable
void - return 
static - 
there can be multi ple mains


explain string - object it is a collection
immutable - cannot change

what is contatination



}



1.order of modifier

=================JAVA data types====

1. class Test06J{
	public static void main(String[] args){
		booleab b=true;
		if(b==true){
		System.out.println("Test06J");
		}
	}
}

2.Enum - enumerator
note - enum is implicitly public static final.hence we cant create child item
java.lang.Enum.class

methods present in java Enum
a.values(),valuesOf(),ordinal()

toString() is overridden in java
enum Color{
RED,GREEN,BLUE
}
public class Test06J{
public static void main(String[] args){
	Color c1 = Color.RED;
	System.out.print(c1)
	}
	}
	
	
================python 08/06/2019==========

raw_input
input

num1=input()
num2=input()
print(num1+num2)
#returns concatinated string
#change the values to int(num1)

num1=int(num1)
num2=int(num2)
print(num1+num2)
#####3
from sys import stdin,stdout
def fun():
	n=stdin.readline()
	arr =int(x) for x in stdin.readline().split()
	
	
	
	# import random

# while True :
	# yourinput=input("Enter the input: ")
	# out=random.randint(1,100)
	# if(int(yourinput) > out):
		# print("Your have your lucky number")
		# print (out)
		# break
	# else:print("Try again",out)	
		
		
		sep="" - seperater
		end="" - next line 
print("vedavyas",end="@")
print("burli")

##write a logic to write script of amazon prodcut avaialability
1. imoport all the req modules like requests html  from lxml
	time smtplib schedule
	
2. methods a. send mail component b. check the availability
	c. read the input d.schedule the job to check every 1 min
	
sort the list by input
list1=['a','b','z','y','p','e']
print(sorted(list1))

use this for any sorting

list.sort(key=int) or
list.sort(key=i=len)
list.sort(reverse=True)
list1=['a','db','hz','oy','zp','ue']
print(sorted(list1))

list2=['a','dbe','heez','oeeey','ezp','ueeeeeeee']
print(sorted(list2))
list2.sort(key=len)
list2.sort(reverse=True)
print(list2)


numpy array 

arr=array.array('i',[]1,2,3,4,5])



arr=array.array('i',[1,2,3,4,5])
for i in range(0,3):
	print(arr[i],end=" ")
print("\r")

out=np.arange(8)
print(out)

out1=np.arange(8).reshape(2,4)
print(out1)
out2=np.arange(8).reshape(2,2,2)
print(out2)

numpy.linspace(start, stop, num = 50, endpoint = True, retstep = False, dtype = None) : 
Returns number spaces evenly w.r.t interval. 
Similiar to arange but instead of step it uses sample number.

print("B\n", geek.linspace(2.0, 3.0, num=5, retstep=True), "\n")



flatten array  - collapse into one dimension 

#=========Python -Loops========GFG==========
#----Loops-----
#for loops
arr=["bannana","apple","pineapple","grapes"]

for i in arr:
	print (i)
	

arr1=[12,13,15]
total=0
for i in arr1:
	total=total+i
	print(total,"-->",end=" ")	
print("\n")



#Sum of all multiples of three and five that are less than 100
import random
ranarr1=[]
def mul35(arr1):
	for i in arr1:
		if i%3 == 0 and i%5 == 0:
			print("Multiples of 3 and 5==>",i)
for i in range(100):
	ranarr1.append(i)
mul35(ranarr1)
	

#============Sorting===

print("-------Bubble sorting-------")
lst=[]
lst1=[]
import random

for i in range(10):
	lst.append(random.randint(1,200))
	lst1.append(random.randint(1,300))
print("Before sorting")
print(lst)
def bubble(lst):
	length=len(lst)-1
	isSorted=False
	while not isSorted:
		isSorted=True
		for i in range(length):
			if lst[i] > lst[i+1]:
				isSorted=False
				lst[i] , lst[i+1] =lst[i+1] , lst[i]
	print("After sorting")
	return lst
print(bubble(lst))
print("============================================$=============")
print("Selection sort starts here")
print("Before sorting")
print(lst1)

def selection(lst1):
	
	for i in range(len(lst1)-1):
		minimumval=lst1.index(min(lst1[i:]))
		lst1[i] , lst1[minimumval] =lst1[minimumval] , lst1[i]
	
	return lst1
print(selection(lst1))


#=========lambda expression in java
interface funinterface{
	void abstractfun(int x);
	
	public void 
}

class Test{
	public static void main(String args[]){
		funinterface obj = (int x)->System.out.println(2*x);
		
		obj.abstractfun(5)
	}

	
		
========= awk bash  hacker rank

awk programming lang allows manipulation of structured data

1. cat emp.txt |awk '{print $4}'
2.
$ cat emp.txt |awk 'BEGIN {count=0}
$4 ~ /Technology/ {count++;}
END {print "yes",count;}'
ans==>yes 3


3. awk 'avg=($1+$2+3/3); (avg<=50)?"FAIL":(avg<80)?"B":"A"'



print("Numpy starts here")

import numpy as np



arr=np.array([[1,2,3,4,5],[6,7,8,9,10]])

print(type(arr))
print("Dimension",arr.ndim)
print("shape",arr.shape)
print("size & type",arr.size,arr.dtype)

#transpose of array
print("Before transpose \n",arr)
print("============")
print("Transpose\n",arr.T)

#unary operators
#min max sum 
print(arr.min(axis=1))
print(arr.max(axis=1))
print("Sum",sum(arr))

print(np.arange(1,10).reshape(3,3))


list2=[]
if len(list2) == 0:
	print("empty")
else:
	print("not")
#find unique from list
arr1=[1,2,3,3,3,3,4,5,6,7,7,8,9]
arr2=[]

for i in arr1:
		if i in arr2:
			continue
		else:
			arr2.append(i)
print(arr2)

#multiply all numbers in list



import random
arr3=[]
for i in range(5):
	x=random.randint(1,10)
	if x not in arr3:
		arr3.append(x)
print(arr3)
j=1
def mult(r):
	j=1
	for i in arr3:
		j=j*3
	return j

print(mult(arr3))

		
	
list3=[1,2,3]
print(np.prod(list3))

from functools import *
n=reduce(lambda x,y:x*y,list3)
print("numpy part1 ends here")



import random
roll="yes"
while roll=="yes" or roll=="y":
	print(random.randint(1,6))
	roll=input("Roll again")
	
print("Roll game ends here.. Thank you")

#====Gussing game===
guess_counter=0
actual_guess=7
flag="in"
#loop to count the guess and actual guess
while guess_counter < 5 and flag=="in":
	
	raw=int(input("Guess the number: "))
	print(raw)
	
	if raw == actual_guess:
		flag="out"
		print("You guessed it right")
	guess_counter+=1
	
	
if guess_counter==5:
	print("You are out of guesses")
=====
# Write a one-liner that will count the number of capital letters in a file. Your code should work even if the file is too big to fit in memory
with open("Csample.txt")as fh:
	count=0
	text=fh.read()
	for i in text:
		if i.islower():
			
			count+=1
	print(count)
	
======= list convert string to int
list1=["1","5","45","34","2","22"]
print(list1)
list1=[int(i) for i in list1]
list1.sort()
print(list1)
=========== Python dictionary

=>python built in data type it defines one to one relation between
key and values
=>dictionaries are indexed by keys
=>It is a unordered collection of data values
=>
print("Hello there")


dict={1:"A new hope",2:"Empire strikes back",3:"Return of the Jedi"}
#print out all the key and value 
list1=[]
for key,value in dict.items():
	print(key,":",value)

	
#convert data of dict to list
for key,value in dict.items():
	print(key,":",value)
	list1.append(key)
	list1.append(value)
print(list1)


#--- update the dictionary
dict[1]="Phantom meneace"
print(dict.get(1))
print(dict)


def translate(bilingual_dict,english_words_list):
    #Write your logic here
	swedish_words_list=[]
	for  key,value in bilingual_dict.items():
	    if key in english_words_list:
		    swedish_words_list.append(value)
    #print(swedish_words_list)
	return swedish_words_list


bilingual_dict= {"merry":"god", "christmas":"jul", "and":"och", "happy":"gott", "new":"nytt", "year":"ar"}
english_words_list=["merry","christmas"]
#english_words_list=translate(bilingual_dict, english_words_list)
print("The bilingual dict is:",bilingual_dict)
print("The english words are:",english_words_list)

swedish_words_list=translate(bilingual_dict, english_words_list)
print("The equivalent swedish words are:",swedish_words_list)

#======== set 
flight_set={500,520,600,345,520,634,600,500,200,200}

print(flight_set)

passengers_list=["George", "Annie", "Jack", "Annie", "Henry", "Helen", "Maria", "George", "Jack", "Remo"]
print(set(passengers_list))	


#=== sololearn questions


def numbers(x):
	for i in range(x):
		if i % 4 == 3:
			yield i
			print(i)
list(numbers(11))
#ans==> 3,7


def add(x,y):
	x+y
	return 0
print(5+6,0)


fruits =["apples","oranges","lemons"]
fruits[2] = "strawberries"
print(fruits)
print(fruits[2][5:])

#true or false
>>> 2 == 2.0
True
>>> 2 is 2.0
False
>>>
#============
JavaScript

Why study JS?
=>JS is one of  the 3 languages all of web developers must learn:
1. HTML to define the content of web pages
2. CSS to specify the layout of web pages
3. JS to program the behaviour of web pages


Declare variables
var x,y,z;  //declare var
x=5;y=4; 	// assign values
z= x + y;	// compute values


#=======================
Flask - microframework for python

webdevelopment

>>from flask import flask
>>app=Flask(__name__) #is a var in python its a name of module
>>@app.route("/")
>>def hello():
	return "Hello there!  General Kenobi"
	
#======Introduction to flask
	from flask import Flask
app = Flask(__name__)

@app.route("/")
@app.route("/home")
def hello():
    return "<b>Home Page</b><h1>Hello There ! General Kenobi</h1>"
	
@app.route("/about")
def about():
    return "<h1>About page</h1>"
	
if __name__ =="__main__":
	app.run(debug=True)

#======Flask template usage
#======Flask - wtf forms and validations



#====== HTML ======
Hyper text  mark-up language
commanly used language to write web pages
refer hypertext101.html
<!DOCTYPE html>
<html>

   <head>
      <title>This is document title</title>
   </head>
	
   <body>
      <h1>This is a heading</h1>
      <p>Document content goes here.....</p>
   </body>
	
</html>

#==The Web Structure==
Modern Web design 
HTML - structured
CSS - Presentation
JavaScript - Behavior

PHP : Backend
CMS ; Content management

Attribute always appear in name : value pair

Introduction to HTML 5
The default character encoding in HTML5 is UTF-8.


#=====================
++++++ Python Flask part 4 Database

>>> db.create_all()
>>> from flask_intro import User,Post
>>> user_1 =User(username='Diameter',email='radiusx2@demo.com',password='passwor
d')
>>> db.session.add(user_1)
>>> user_2 =User(username='VED',email='vedx2@demo.com',password='password')
>>> db.session.add(user_2)
>>> db.session.commit()
>>> User.query.all()
[User('Diameter','radiusx2@demo.com','default.jpg'), User('VED','vedx2@demo.com'
,'default.jpg')]
>>> User.query.filter_by(username='Diameter')
<flask_sqlalchemy.BaseQuery object at 0x000000000478D0F0>
>>> User.query.filter_by(username='Diameter').all()
[User('Diameter','radiusx2@demo.com','default.jpg')]
>>> user=User.query.filter_by(username='Diameter').first()
>>> user
User('Diameter','radiusx2@demo.com','default.jpg')
>>> user.id
1
>>> user.username
'Diameter'
>>> user.email
'radiusx2@demo.com'
>>> user.posts
[]
>>> user.all()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'User' object has no attribute 'all'
>>> user=User.queryget(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: type object 'User' has no attribute 'queryget'
>>> user=User.query.get(1)
>>> user
User('Diameter','radiusx2@demo.com','default.jpg')
>>>
>>> post_1=Post(title='Blog 1',content='First post content',user_id=user.id)
>>> post_2=Post(title='Blog 2',content='second post content',user_id=user.id)
>>> db.session.add(post_1)
>>> db.session.add(post_2)
>>> db.session.commit()
>>> user.posts
[Post('Blog 1', '2019-06-22 18:43:25.579300'), Post('Blog 2', '2019-06-22 18:43:
25.580300')]
>>> for posts in user.posts:
...     print(posts.title)
...
Blog 1
Blog 2
>>> for posts in user.posts:
...     print(posts.cotent)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'Post' object has no attribute 'cotent'
>>> for posts in user.posts:
...     print(posts.content)
...
First post content
second post content
>>> post=Post.query.all()
>>> post
[Post('Blog 1', '2019-06-22 18:43:25.579300'), Post('Blog 2', '2019-06-22 18:43:
25.580300')]
>>> post.author
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'author'
>>> post.Movie
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'Movie'
>>> db.drop.all()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'SQLAlchemy' object has no attribute 'drop'
>>> User.query.all()
[User('Diameter','radiusx2@demo.com','default.jpg'), User('VED','vedx2@demo.com'
,'default.jpg')]
>>> POst.query.all()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'POst' is not defined
>>> Post.query.all()
[Post('Blog 1', '2019-06-22 18:43:25.579300'), Post('Blog 2', '2019-06-22 18:43:
25.580300')]
>>> db.drop.all()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'SQLAlchemy' object has no attribute 'drop'
>>>
>>>
>>> db.drop_all()
>>> Post.query.all()


#=============================================================================================

from flask_intro import db
from flask_intro import User,Post

db.create_all()
user_1 =User(username='Diameter',email='radiusx2@demo.com',password='passwor
d')

user_2 =User(username='VED',email='vedx2@demo.com',password='password')
db.session.add(user_1)
db.session.add(user_2)
db.session.commit()
User.query.all()
User.query.first()
user=User.query.get()

#============= Hacker Rank - BASH=====
#!/bin/bash
read a
read b
read c

if [ $a -eq $b ] || [ $a -eq $c ] || [ $c -eq $b ];then
    if [ $((a+b)) -eq $((c*2)) ];then
        echo "EQUILATERAL"
    else
        echo "ISOSCELES"
        fi
else
    echo "SCALENE"
    fi

	
#===================================================================
Flask - user authentication

from flask_bcrypt import Bcrypt
bcrypt=Bcrypt()
bcrypt.generate_password_hash('Test')
#=====================

Python Flask-restful intstallation 101

1. intall flask -restful 
	>>pip install flask-restful
	
2. git clone https://github.com/flask-restful/flask-restful.git

3. Restful  routing
the main building block provided by flask restful are resource 

#================================================================================
Array 
1. array(datatype,valuelist)
import array
arr=array.array(i,[1,2,3,4,5])


#==============================================================


C++

1. variables must be defined with name and datatype
//helloworld.cpp
#include <iostream>
using namespace std;

int main()
{
    /*int myVar=30;
    int myVar2=20;
    cout<<myVar + myVar2;*/
    string char1="Chelsea";
    string char2="Frank Lampard";
    int age;
    age=43;
    
    cout<<"I am lampard"<<endl;
    cout<<"I was a "<<char1<<" player"<<endl;
    cout<<"I am chelsea head coach - " <<char2<<" he is "<<age <<endl;
 //   cin>>cinput;
    
    
 //   return 0;
}

char grade ="A";
string phrase = "Lampard Academy";

int age = 43;
double gpa = 2.4;
bool isMale = false;
#==============================================================================================================================================================

#iteration over numpy
import numpy as np

a= np.arange(12)

a1=a.reshape(3,4)
for x in np.nditer(a1):
	print(x)
	
# split list having single int

list=[200]

out=list(map(int,str(input[0])))


def fun(a, b, c, d): 
    print(a, b, c, d) 
  
# Driver Code 
my_list = [1, 2, 3, 4] 
  
# Unpacking list into four arguments 
fun(*my_list)

def packaingmysum(*args):
	sum=0
	for i in range(len(args)):
		sum+=args[i]
	return sum
	
packaingmysum(4,5,6,7)


#===================================================
pandas - 2d data structure
three basic components
data
row 
columns


create a dataframe



Inner Relm
Core Python 
understand between python 2 and 3
Web framework - flask and django 
OOps mapping - What makes ORM special 
difference between ORM and SQL
Multiprocess architecture - Threads and process
Develop and use of REST API
How to pacakage up code for release and deployment
Front end and DB
Process is a instance of computer program


ThreD is a entity within Process.
its a subset of process
Thread is a sequence of such instructions within program 
taht can be executed independently of other code

TCB
thread control block



27 Aug 2019
1. Terniry operator

traditional condition
condition=True #gives you 1
#condition=false gives you 0

if condition:
	x=1
else:
	x=0

ternery operator
>>x=1 if condition else 0



2. File

f= open('test.txt',r)

filecontent=f.read()
f.close()

use context manager

with open('tezt.txt',r) as f:
	filecontent=f.read()



3. Enumerate

list1=['spider','iron','bat','super']

list2=['peter','tony','bruce','clark']


for index,values in enumerate(list2):
    
	hero=list1[index]
    
print(values +' is '+ hero)




msql connection
import mysql.connector

print("Making Mysql connection")

#creating connection obj
mysql.connector.connect(host=localhost,user=username,password=pass)
#creating cursor obj
cur=myconn.cursor()


try:
	cur.execute("select * from ved;")
	myconn.commit()


except:
	myconn,rollback()

print(cur.rowcount,"Record inserted")
myconn.close()



#Flask dynamic URL

from flask import Flask
app=Flask(__name__)
@app.route('/home/<string:name>')
def home(name):
	return "value is:" +name
	
	



def reverse(num):
        strNum=str(num)
        
        return strNum[::-1]
        
def isPalindrome(num):
        strNum=str(num)
        rev=reverse(strNum)
        intRev=int(rev)
        flag=True
        while flag == True:
            num+=1
            strNum=str(num)
            rev=reverse(strNum)
            intRev=int(rev)
            if rev == strNum:
                print('{} is same as {}'.format(strNum,rev))
                flag=False
            else:
                print('{} is NOT same as {}'.format(strNum,rev))
                flag=True
            
        
        
            
isPalindrome(22)

